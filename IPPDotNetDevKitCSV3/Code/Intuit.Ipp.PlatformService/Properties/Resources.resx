<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdminsForAllProductsNotRetuned" xml:space="preserve">
    <value>List of administrators for all published applications not returned.</value>
  </data>
  <data name="ArgumentCannotBeNegative" xml:space="preserve">
    <value>The specified argument {0} cannot be initialized with a negative value.</value>
  </data>
  <data name="CommunicationErrorMessage" xml:space="preserve">
    <value>There was an error while communicating with the Ids Server.</value>
  </data>
  <data name="EntityIdDomainNotNullMessage" xml:space="preserve">
    <value>IdDomain of the entity cannot be null or empty.</value>
  </data>
  <data name="EntityIdNotNullMessage" xml:space="preserve">
    <value>Id of the entity cannot be null or empty.</value>
  </data>
  <data name="EntityString" xml:space="preserve">
    <value>entity</value>
  </data>
  <data name="ExceptionGeneratedMessage" xml:space="preserve">
    <value>Exception has been generated: {0}</value>
  </data>
  <data name="IdDomainString" xml:space="preserve">
    <value>IdDomain</value>
  </data>
  <data name="IdsMethodNotSupportedMessage" xml:space="preserve">
    <value>This method is not supported for the given entity.</value>
  </data>
  <data name="IdString" xml:space="preserve">
    <value>Id</value>
  </data>
  <data name="MustProvideContentType" xml:space="preserve">
    <value>Must provide content type.</value>
  </data>
  <data name="MustProvideDbId" xml:space="preserve">
    <value>Must provide database id.</value>
  </data>
  <data name="MustProvideEmail" xml:space="preserve">
    <value>Must provide email.</value>
  </data>
  <data name="MustProvideEmailOrScreenName" xml:space="preserve">
    <value>Must provide email or screen name.</value>
  </data>
  <data name="MustProvideFirstName" xml:space="preserve">
    <value>Must provide first name.</value>
  </data>
  <data name="MustProvideLastName" xml:space="preserve">
    <value>Must provide last name.</value>
  </data>
  <data name="MustProvidePassword" xml:space="preserve">
    <value>Must provide password.</value>
  </data>
  <data name="MustProvideRealmId" xml:space="preserve">
    <value>Must provide realm id.</value>
  </data>
  <data name="MustProvideRoleId" xml:space="preserve">
    <value>Must provide role id.</value>
  </data>
  <data name="MustProvideUserId" xml:space="preserve">
    <value>Must provide userId.</value>
  </data>
  <data name="MustProvideValidApiName" xml:space="preserve">
    <value>Must provide a valid Api Name.</value>
  </data>
  <data name="MustProvideValidDbid" xml:space="preserve">
    <value>Must provide a valid database id.</value>
  </data>
  <data name="NoRealmReturned" xml:space="preserve">
    <value>GetIDSRealm did not return realm</value>
  </data>
  <data name="NoRoleInformationReturned" xml:space="preserve">
    <value>No role information returned.</value>
  </data>
  <data name="PageNumberString" xml:space="preserve">
    <value>pageNumber</value>
  </data>
  <data name="PageSizeString" xml:space="preserve">
    <value>pageSize</value>
  </data>
  <data name="ParameterNegativeValueMessage" xml:space="preserve">
    <value>Parameter cannot have a negative value.</value>
  </data>
  <data name="ParameterNotNullMessage" xml:space="preserve">
    <value>Parameter cannot be null.</value>
  </data>
  <data name="ParameterZeroNegativeValueMessage" xml:space="preserve">
    <value>Parameter cannot be zero or negative value.</value>
  </data>
  <data name="ResponseStreamNullOrEmptyMessage" xml:space="preserve">
    <value>The Response Stream was null or empty.</value>
  </data>
  <data name="RetryLimitExceeded" xml:space="preserve">
    <value>The action has exceeded its defined retry limit.</value>
  </data>
  <data name="MustProvideAccountId" xml:space="preserve">
    <value>Must provide account id.</value>
  </data>
  <data name="MustProvideServiceProviderId" xml:space="preserve">
    <value>Must provide service provider id.</value>
  </data>
 
  <data name="PaidSubscriptionNotRetuned" xml:space="preserve">
    <value>List of paid application subscriptions not returned.</value>
  </data>
  <data name="TrailSubscriptionNotRetuned" xml:space="preserve">
    <value>List of trail application subscriptions not returned.</value>
  </data>
  <data name="UserTextCannotBeNull" xml:space="preserve">
    <value>User text cannot be null.</value>
  </data>
  <data name="AppTokenCannotBeEmpty" xml:space="preserve">
    <value>The AppToken cannot be empty.</value>
  </data>
  <data name="NoAdminInformationReturned" xml:space="preserve">
    <value>No admin information returned.</value>
  </data>
  <data name="NoInformationReturnedFromService" xml:space="preserve">
    <value>No information returned from service.</value>
  </data>
  <data name="NoUserInformationReturned" xml:space="preserve">
    <value>No user information returned.</value>
  </data>
  <data name="NoUserRoleInformationReturned" xml:space="preserve">
    <value>No user role information returned.</value>
  </data>
  <data name="ServiceContextCannotBeNull" xml:space="preserve">
    <value>The Service context cannot be null.</value>
  </data>
  <data name="MustProvideKeyFilePassword" xml:space="preserve">
    <value>Must provide keyFilePassword.</value>
  </data>
  <data name="MustProvideKeyFilePath" xml:space="preserve">
    <value>Must provide keyFilePath.</value>
  </data>
  <data name="MustProvideAuthIdPseudonym" xml:space="preserve">
    <value>Must provide authIdPseudonym.</value>
  </data>
  <data name="CertificateError" xml:space="preserve">
    <value>An error with the certificate occurs.</value>
  </data>
  <data name="CertificateNotFound" xml:space="preserve">
    <value>The certificate file could not be located on disk.</value>
  </data>
  <data name="MustProvideRealmIdPseudonym" xml:space="preserve">
    <value>Must provide realmIdPseudonym.</value>
  </data>
  <data name="ErrorCodeMissing" xml:space="preserve">
    <value>API response without Error code element.</value>
  </data>
  <data name="ErrorCodeNonNemeric" xml:space="preserve">
    <value>Error code "{0}" not numeric!</value>
  </data>
  <data name="ErrorDetails0" xml:space="preserve">
    <value>{0} (Error {1}, Detail: {2})</value>
  </data>
  <data name="ErrorDetails1" xml:space="preserve">
    <value>{0} (Error {1})</value>
  </data>
  <data name="ErrorWithNoText" xml:space="preserve">
    <value>Error {0}</value>
  </data>

  <data name="AssertFederatedIdentityNotRetuned" xml:space="preserve">
    <value>Federated Identity for realm not returned.</value>
  </data>
</root>